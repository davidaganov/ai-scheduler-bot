import { Context, Telegraf } from "telegraf";
import { Update } from "telegraf/typings/core/types/typegram";
import { setupTaskCallbacks } from "./taskCallbacks";
import { setupProjectCallbacks } from "./projectCallbacks";
import { setupFilterCallbacks } from "./filterCallbacks";
import { setupNavigationCallbacks } from "./navigationCallbacks";
import { safeAnswerCbQuery } from "./utils";

/**
 * Sets all callback handlers
 * @param bot - Telegraf bot instance
 */
export function setupCallbacks(bot: Telegraf<Context<Update>>) {
  console.log("üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ callback-–∑–∞–ø—Ä–æ—Å–æ–≤...");

  // Register handlers in a specific order:
  // first navigation and filter handlers
  setupNavigationCallbacks(bot);
  console.log("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã");

  setupFilterCallbacks(bot);
  console.log("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã");

  // then handlers for tasks and projects
  setupTaskCallbacks(bot);
  console.log("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–¥–∞—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã");

  setupProjectCallbacks(bot);
  console.log("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã");

  // Process all remaining callback queries
  bot.action(/^.*$/, async (ctx) => {
    // Get the data of the callback query for debugging
    const callbackData =
      ctx.callbackQuery && "data" in ctx.callbackQuery
        ? ctx.callbackQuery.data
        : "undefined";

    console.log(`‚ùå –ü–æ–ª—É—á–µ–Ω –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π callback: ${callbackData}`);
    await safeAnswerCbQuery(ctx, "–î–µ–π—Å—Ç–≤–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ");
  });

  console.log("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã");
}
